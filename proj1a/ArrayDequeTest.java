public class ArrayDequeTest {
    public static void main(String[] args) {
        ArrayDeque<Number> L = new ArrayDeque<>();
        Number curr = 0;
        boolean isEmp = L.isEmpty();
        int length = L.size();
    /*   L.addFirst("1991");
        L.addFirst("1992");
        L.addFirst("1993");
        L.addFirst("2020");
        L.addFirst("2019");
        L.addFirst("2018");
        L.addFirst("2017");
        L.addFirst("2016");
        L.addFirst("2015");
        L.addFirst("2014");
        L.addFirst("2013");
        L.addFirst("2012");
        L.addFirst("2011");
        L.addFirst("2010");
        L.addFirst("2009");
        L.addFirst("2008");
        L.addFirst("2007");
        L.addFirst("2006");
        L.addFirst("2005");
        isEmp = L.isEmpty();
        length = L.size();
        L.printDeque();
        curr = L.get(3);
        curr = L.removeFirst();
        curr = L.removeLast();
        curr = L.removeFirst();
        curr = L.removeFirst();
        curr = L.removeLast();
        curr = L.removeFirst();
        curr = L.removeFirst();
        curr = L.removeLast();
        curr = L.removeFirst();
        curr = L.removeFirst();
        curr = L.removeLast();
        curr = L.removeFirst();
        curr = L.removeFirst();
        curr = L.removeLast();
        curr = L.removeFirst();
        curr = L.removeLast();
        curr = L.removeFirst();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        curr = L.removeLast();
        L.addFirst("1991");
        L.addFirst("1992");
        L.addFirst("1993");
        L.addFirst("2020");
        L.addFirst("2019");
        L.addFirst("2018");
        L.addFirst("2017");
        L.addFirst("2016");
        L.addFirst("2015");
        L.addFirst("2014");
        L.addFirst("2013");
        L.addFirst("2012");
        L.addFirst("2011");
        L.addFirst("2010");
        L.addFirst("2009");
        L.addFirst("2008");
        L.addFirst("2007");
        L.addFirst("2006");
        L.addFirst("2005");*/
       /* L.addFirst(0);
        L.addLast(1);
        curr = L.get(0);
        L.removeLast();
        L.addFirst(4);
        L.removeFirst() ;
        L.removeLast();
        L.addFirst(7);
        L.addLast(8);
         curr= L.get(0);
        L.removeLast();
        L.removeLast();
        L.addFirst(12);
        L.addFirst(13);
         curr= L.get(0);
         curr= L.get(1);
        L.removeLast();
        L.addFirst(17);
        L.get(0);
        L.get(0);
        L.removeLast();
        L.addFirst(21);
        L.addFirst(22);
        L.removeFirst();


        L.addLast(0);
        curr = L.get(0);
        L.addLast(2);
        L.addLast(3);
        L.removeFirst();
        curr = L.get(0);
        L.addLast(6);
        L.addFirst(7);
        curr = L.get(2);
        L.addFirst(9);
        L.removeFirst();
        L.addLast(11);
        L.addLast(12);
        L.addLast(13);
        L.addLast(14);
        L.addLast(15);
        L.addLast(16);
        L.addLast(17);
        L.addLast(18);
        L.addLast(19);
        L.addLast(20);
        L.addLast(21);
        L.addLast(22);
        L.addLast(23);
        L.addLast(24);
        L.addLast(25);
        L.addLast(26);
        L.addLast(27);
        L.addLast(28);
        L.addLast(29);
        L.addLast(30);
        L.addLast(31);
        L.addLast(32);
        L.addLast(33);
        L.addLast(34);
        L.addLast(35);
        L.addLast(36);
        L.addLast(37);
        L.addLast(38);
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
        L.removeLast();
*/

        L.addFirst(1);
        L.addFirst(2);
        L.addFirst(3);
        L.addLast(4);
        L.addLast(5);
        L.addFirst(6);
        L.addFirst(7);
        L.addFirst(8);
        L.printDeque();
        new ArrayDeque(L);
    }
}

